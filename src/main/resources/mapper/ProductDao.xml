<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.project1.o2o.dao.ProductDao">
	<resultMap id="productMap"
		type="com.project1.o2o.entity.Product">
		<id column="product_id" property="productId" />
		<result column="product_name" property="productName" />
		<result column="product_desc" property="productDesc" />
		<result column="img_addr" property="imgAddr" />
		<result column="normal_price" property="normalPrice" />
		<result column="sale_price" property="salePrice" />
		<result column="priority" property="priority" />
		<result column="create_time" property="createTime" />
		<result column="last_edited" property="lastEdited" />
		<result column="enable_status" property="enableStatus" />
		<association property="productCategory"
			column="product_category_id"
			javaType="com.project1.o2o.entity.ProductCategory">
			<id column="product_category_id" property="productCategoryId" />
			<result column="product_category_name"
				property="productCategoryName" />
		</association>
		<association property="shop" column="shop_id"
			javaType="com.project1.o2o.entity.Shop">
			<id column="shop_id" property="shopId" />
			<result column="owner_id" property="owner.userId" />
			<result column="shop_name" property="shopName" />
		</association>
		<collection property="productImgList" column="product_id"
			ofType="com.project1.o2o.entity.ProductImg"> <!--  -->
			<id column="product_img_id" property="productImgId" />
			<result column="img_addr" property="imgAddr" />
			<result column="img_desc" property="imgDesc" />
			<result column="priority" property="priority" />
			<result column="create_time" property="createTime" />
			<result column="product_id" property="productId" />
		</collection>
	</resultMap>
	<insert id="insertProduct"
		parameterType="com.project1.o2o.entity.Product"
		useGeneratedKeys="true" keyProperty="productId" keyColumn="product_id">
		Insert into tb_product(product_name,product_desc,img_addr,normal_price,sale_price,priority,create_time,
		last_edited,enable_status,product_category_id,shop_id)
		Values(#{productName},#{productDesc},#{imgAddr},#{normalPrice},#{salePrice},#{priority},#{createTime},
		#{lastEdited},#{enableStatus},#{productCategory.productCategoryId},#{shop.shopId})
	</insert>
	
	<select id="queryByProductId" resultMap="productMap" parameterType="Long">
		Select p.product_id, p.product_name, p.product_desc, p.img_addr, p.normal_price, p.sale_price, p.priority,
		p.create_time, p.last_edited, p.enable_status, p.product_category_id, p.shop_id, pi.product_img_id,
		pi.img_addr, pi.img_desc, pi.priority, pi.create_time
		From tb_product p
		Left join tb_product_img pi <!-- allow none or more existing product images -->
		On p.product_id = pi. product_id
		Where p.product_id = #{productId}
		Order by pi.priority Desc
	</select>
	
	<update id="updateProduct" parameterType="com.project1.o2o.entity.Product" keyProperty = "product_id"
		useGeneratedKeys = "true">
		Update tb_product
		<set>
		<!-- test="(variable name)xxx !=null">(name in db)xxx_xxx=#{xxx}
				myBatis dynamic sql generation -->
			<if test="productName !=null">product_name = #{productName},</if>
			<if test="productDesc !=null">product_desc = #{productDesc},</if>
			<if test="imgAddr !=null">img_addr = #{imgAddr},</if>
			<if test="normalPrice !=null">normal_price = #{normalPrice},</if>
			<if test="salePrice !=null">sale_price = #{salePrice},</if>
			<if test="priority !=null">priority = #{priority},</if>
			<if test="lastEdited !=null">last_edited = #{lastEdited},</if>
			<if test="enableStatus !=null">enable_status = #{enableStatus},</if>
			<if test="productCategory != null and productCategory.productCategoryId != null">
				product_category_id=#{productCategory.productCategoryId},</if>
		</set>
		Where shop_id=#{shop.shopId}<!-- ensure the shop administrator cannot modify shops without permission -->
		And product_id =#{productId}
	</update>
	
	<!-- Product name(fuzzy), status, shopId, category -->
	<select id="queryProductList" resultType="com.project1.o2o.entity.Product">
		Select product_id, product_name, product_desc, img_addr,normal_price, sale_price, priority, create_time, 
		last_edited, enable_status, product_category_id, shop_id
		From tb_product
		<where>
			<if test="productCondition.productCategory != null and productCondition.productCategory.productCategoryId != null">
				and product_category_id = #{productCondition.productCategory.productCategoryId}
			</if>
			<if test="productCondition.productName != null">
				and product_name like '%${productCondition.productName}%'
			</if>
			<if test="productCondition.enableStatus != null">
				and enable_status = #{productCondition.enableStatus}
			</if>
			<if test="productCondition.shop != null and productCondition.shop.shopId != null">
				and shop_id = #{productCondition.shop.shopId}
			</if>
		</where>
		Order by priority Desc
		Limit #{rowIndex},#{pageSize};
	</select>
	
	<select id= "queryProductCount" resultType="int">
		Select count(1)
		From tb_product
		<where>
			<if test="productCondition.productCategory != null and productCondition.productCategory.productCategoryId != null">
				and product_category_id = #{productCondition.productCategory.productCategoryId}
			</if>
			<if test="productCondition.productName != null">
				and product_name like '%${productCondition.productName}%'
			</if>
			<if test="productCondition.enableStatus != null">
				and enable_status = #{productCondition.enableStatus}
			</if>
			<if test="productCondition.shop != null and productCondition.shop.shopId != null">
				and shop_id = #{productCondition.shop.shopId}
			</if>
		</where>
	</select>
	
	<update id="updateProductCategoryToNull" parameterType = "Long">
		Update tb_product
		Set product_category_id = null
		Where product_category_id = #{productCategoryId}
	</update>
</mapper>
